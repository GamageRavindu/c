#include <stdio.h>
#include <stdlib.h>

#define max_stack 20

typedef int stackEntry;

typedef struct {
    int top;
    stackEntry entry[max_stack];
}Stack;

void createStack(Stack *s) {
    s->top = -1;
}

typedef enum {
    FALSE,
    TRUE
}boolean;

boolean isStackEmpty(const Stack *s) {
    return(s->top == -1);
}

boolean isStackFull(const Stack *s) {
    return(s->top == max_stack -1 );
}

void push(stackEntry item, Stack *s) {
    if(!isStackFull(s)) {
        s->entry[++s->top] = item;
    } else {
        printf("- stack is full ! -");
        exit(1);
    }
}

void pop(stackEntry *item, Stack *s) {
    if(!isStackEmpty(s)) {
        *item = s->entry[s->top--];
    } else {
        printf("- stack is empty ! -");
        exit(1);
    }
}

void printStack(Stack *s){
    if(isStackEmpty(s)){
        printf("stack is empty! ");
    } else {
        printf("stack content is:\n");
        for(int i= s->top; i >= 0; i--){
            printf("\t%d", s->entry[i]);
            printf("\n");
    }
}


int main(){
    Stack s;
    createStack(&s);
    push(10, &s);
    push(20, &s);
    push(30, &s);
    push(40, &s);
    printStack(&s);
    return 0;
}
